name: Build WSCL Main site plugin

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout our code 
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup NodeJS environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "22.12.0"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: xdebug

      # cache the dependencies to speed up the build
      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Fetch the vendor folder from the cache, keyed off the composer.lock file 
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # install NPM dependencies
      - name: Install NPM dependencies
        run: npm install

      # Rev the version number for the next build
      - name: Rev Version
        id: rev-version
        run: |
          npm --no-git-tag-version version patch
          echo "project_name=$(sed -n -e 's/.*"name": "\(.*\)",.*/\1/p' <<< cat package.json)" >> $GITHUB_OUTPUT
          echo "project_version=$(sed -n -e 's/.*"version": "\(.*\)",.*/\1/p' <<< cat package.json)" >> $GITHUB_OUTPUT

      # build the app
      - name: Build
        run: |
          npm run build
          mv ${{ steps.rev-version.outputs.project_name }}.zip ${{ steps.rev-version.outputs.project_name }}-${{ steps.rev-version.outputs.project_version }}.zip
        
      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      # Save versioned files 
      - name: Commit version files
        id: commit-version
        run: |
          git add package.json package-lock.json composer.json composer.lock entryPoint.php
          echo -n "Rev to version ${{ steps.rev-version.outputs.project_version }}" | git commit -F -
          git push
          echo "commit-ref=$(git show-ref --heads -s)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # CREATE GITHUB RELEASE AND ADD ASSETS
      - name: Create GitHub release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.rev-version.outputs.project_version }}
          name: Release ${{ steps.rev-version.outputs.project_version }}
          commit: ${{ steps.commit-version.outputs.commit-ref }}
          omitBody: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts:
            ${{ steps.rev-version.outputs.project_name }}-${{ steps.rev-version.outputs.project_version }}.zip
